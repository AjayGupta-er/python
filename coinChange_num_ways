def coinChange(total, change, coinNumber):
    if total < 0:
        return 0
    elif total == 0:
        return 1
    elif coinNumber <=0 and total >=1:
        return 0
    else:
        # total coin change including the coin plus excluding the coin.
        return(coinChange(total, change, coinNumber-1) + coinChange(total-change[coinNumber-1], change, coinNumber))
        
change = [1,2,3]
x = coinChange(4, change, len(change))
print(x)

def coinChange_dp(total, change, coinNumber):
    table_coinChange = [[0 for i in range(coinNumber)] for j in range(total+1)]
    for i in range(coinNumber):
        table_coinChange[0][i] = 1
    for i in range(1, total+1):
        for j in range(coinNumber):
            if i - change[j] >= 0:
                x = table_coinChange[i-change[j]][j]
            else:
                x = 0
            if j >= 1:
                y = table_coinChange[i][j-1]
            else:
                y = 0
            table_coinChange[i][j] = x + y
    print(table_coinChange)
    return(table_coinChange[total][coinNumber-1])
    
change = [1,2,3]
x = coinChange_dp(4, change, len(change))
print(x)
