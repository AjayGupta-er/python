class Node:
    def __init__(self,data):
        self.data=data
        self.next = None
        
class linkedList:
    def __init__(self): 
        self.head = None
    def insert_beg(self, num):
        newNode = Node(num)
        temp = self.head
        self.head = newNode
        newNode.next = temp
        return (self.head)
    def insert_end(self,num):
        newNode = Node(num)
        if self.head == None:
            self.head = newNode
            return(self.head)
        else:
            temp = self.head
            while temp.next != None:
                temp = temp.next
            temp.next = newNode
            return (self.head)
    def printList(self): 
        temp = self.head 
        while (temp): 
            print(temp.data) 
            temp = temp.next
    def move_to_end(self, key):
        if self.head == None:
            return
        temp = self.head
        nodeList = []
        while temp.next != None:
            if temp.data == key:
                nodeList.append(temp.data)
            temp = temp.next
        if len(nodeList) == 0:
            print("No element found with key: {}".format(key))
            return
        else:
            for node in nodeList:
                self.delete_key(node)
            for node in nodeList:
                self.insert_end(node)
            return(self.head)
                
    def delete_key(self, key):
        temp = self.head
        
        if(temp.data == key):
            self.head = temp.next
            temp = None
            return
        while(temp is not None):
            if temp.data == key:
                break
            prev = temp
            temp = temp.next
        
        if temp == None:
            return
        
        prev.next = temp.next 
        temp = None
        
    

if __name__ == "__main__":
    llist = linkedList()
    llist.head = Node(6)
    llist.insert_end(6)
    llist.insert_end(7)
    llist.insert_end(6)
    llist.insert_end(3)
    llist.insert_end(10)
    print("Elements Before Move")
    llist.printList()
    print("=================")
    print("Elements After Move")
    llist.move_to_end(6)
    llist.printList()
